<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NotDone on aiken&#39;s blog</title>
    <link>https://metisy.cool/tags/notdone/</link>
    <description>Recent content in NotDone on aiken&#39;s blog</description>
    <generator>Hugo -- 0.137.0</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 May 2024 06:22:33 +0000</lastBuildDate>
    <atom:link href="https://metisy.cool/tags/notdone/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LearnWeb21-JS06-异步JS</title>
      <link>https://metisy.cool/posts/learnweb21-js06-%E5%BC%82%E6%AD%A5js/</link>
      <pubDate>Wed, 01 May 2024 06:22:33 +0000</pubDate>
      <guid>https://metisy.cool/posts/learnweb21-js06-%E5%BC%82%E6%AD%A5js/</guid>
      <description>&lt;blockquote class=&#34;alert-blockquote alert-summary&#34;&gt;
  &lt;p class=&#34;alert-heading&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34; height=&#34;16&#34;&gt;
      &lt;path d=&#34;M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;
    &lt;span&gt;Summary&lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;如果页面的功能较为复杂，且涉及到了从服务端获取数据等操作，如果简单的使用同步编程，等待一个个任务按顺序执行，由于网络或者某些时间复杂度较高的操作，导致网页加载时间过长，或者使用逻辑不合理（加载某些资源的同时无法进行浏览等），因此异步编程的特性在 web 端是十分重要的。&lt;/p&gt;

&lt;/blockquote&gt;
&lt;p&gt;通过&lt;strong&gt;异步编程&lt;/strong&gt;使一个长时间运行的任务运行的同时能够对网页做出其他的操作和对其他事件做出相应，而不需等待该任务完成，以下的这些功能就是最常见需要异步完成的；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fetch&lt;/code&gt; 发起 http 请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getUserMedia()&lt;/code&gt; 获取用户的摄像头和麦克风&lt;/li&gt;
&lt;li&gt;&lt;code&gt;showOpenFilePicker()&lt;/code&gt; 请求用户选择文件以供访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基于事件处理程序实现异步&#34;&gt;基于事件处理程序实现异步&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;事件处理的逻辑实际上也是一种接近异步编程的方式，对应的函数不是即时执行，而是等事件被触发后在进行调用。一些早期的异步 API 就是这样使用事件的。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
