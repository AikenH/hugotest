<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CV on aiken&#39;s blog</title>
    <link>https://aikenh.cn/hugotest/tags/cv/</link>
    <description>Recent content in CV on aiken&#39;s blog</description>
    <generator>Hugo -- 0.137.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Dec 2021 01:43:30 +0000</lastBuildDate>
    <atom:link href="https://aikenh.cn/hugotest/tags/cv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UniFramework 01</title>
      <link>https://aikenh.cn/hugotest/posts/uniframework/</link>
      <pubDate>Sat, 04 Dec 2021 01:43:30 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/uniframework/</guid>
      <description>&lt;head&gt;
    
    &lt;script src=&#34;https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/crypto-js/3.1.9-1/crypto-js.js&#34;&gt;&lt;/script&gt;
&lt;/head&gt;





&lt;div class=&#34;hugo-encryptor-container&#34;&gt;
  &lt;div class=&#34;hugo-encryptor-prompt&#34;&gt;
    
      &lt;p&gt;文章的部分内容被密码保护：&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class=&#34;hugo-encryptor-form&#34;&gt;
    &lt;input
      class=&#34;hugo-encryptor-input&#34;
      placeholder=&#39;请输入密码&#39;
    /&gt;
    &lt;input
      class=&#34;hugo-encryptor-button&#34;
      type=&#34;button&#34;
      value=&#39;CLICK&#39;
      onclick=&#34;_click_handler(this)&#34;
    /&gt;
  &lt;/div&gt;
  &lt;div
    class=&#34;hugo-encryptor-cipher-text&#34;
    data-password=&#34;aikenhong_blog&#34;
    style=&#34;display: none;&#34;
  &gt;
    &lt;span style=&#34;display: none;&#34;&gt;--- DON&#39;T MODIFY THIS LINE ---&lt;/span&gt;
    &lt;p&gt;@aiken 2021  Framework&lt;/p&gt;
&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Try To make structure universal，编写一个自己的通用的架构，框架化，满足通过不同的model文件和特殊配置文件就能实现不同的模型的一个架构。&lt;/p&gt;
&lt;p&gt;只是一个初步的框架集成，还有很多没有完善的地方，目前测试了ResNet18 跑Cifar10，没有什么问题，如果有什么可以改进的地方，或者你实现了一些Feature，&lt;em&gt;&lt;strong&gt;*欢迎进行交流*&lt;/strong&gt;&lt;/em&gt;！（私下联系我最好啦！）&lt;/p&gt;
&lt;p&gt;感谢帮助&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;还有一些可以参数化或者可视化的地方，由于时间关系目前还没有修改，有兴趣的可以自己先添加一下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂时只集成了分类的模块，后续可能会随缘扩展&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本框架主要希望实现的是：易读性，可拓展性，以及简洁；&lt;/p&gt;
&lt;p&gt;希望将重要的，可变的参数都尽量的分离出来，通过配置文件和命令行参数去定义和运行我们的网络，在这种情况下实现一个较好的工作流程。&lt;/p&gt;
&lt;h2 id=&#34;final-project-design&#34;&gt;Final Project Design&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;PURPOSE：新类发现和模型自主更新&lt;/strong&gt;；同时希望能够解决&lt;strong&gt;长尾分布&lt;/strong&gt;的数据情景；&lt;/p&gt;
&lt;p&gt;**ANALYSIS：**为了实现这种模型的自主更新过程，将整体的流程分成两个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动（start）：&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- more --&gt;
&lt;p&gt;self supervissed 等方法无监督的学习特征提取网络（这种方式是否会对Unbalance产生增益）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;初始化预测模型：&lt;/strong&gt;
基于&lt;strong&gt;Unbalance&lt;/strong&gt;的数据训练一个基础的分类模型，在输出分类结果的同时需要输出对应的预测&lt;strong&gt;置信度&lt;/strong&gt;，这两个其实都是一些简单的Trick，而最重要的是Backbone的分类效果需要得到保证，同时&lt;strong&gt;Backbone需要支撑后续的模型蒸馏&lt;/strong&gt;更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210921164616.png&#34;&gt;
    &lt;img alt=&#34;image-20210921164615348&#34; loading=&#34;lazy&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210921164616.png&#34;class=&#34;responsive-image&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210921164616.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20210921164615348&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模型的自主更新和迭代：&lt;/strong&gt;
Online：在线运行推断模型，通过&lt;strong&gt;置信度输出筛选&lt;/strong&gt;出新类样本，将样本在&lt;strong&gt;样本池&lt;/strong&gt;中收集
Offline：基于样本池的规模和评估触发离线更新：&lt;strong&gt;伪标签生成模型&lt;/strong&gt;；&lt;strong&gt;模型蒸馏和更新&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创新点：自主新类发现和学习&lt;/p&gt;</description>
    </item>
    <item>
      <title>MIM-V-simMIM</title>
      <link>https://aikenh.cn/hugotest/posts/mim-v-simmim/</link>
      <pubDate>Tue, 23 Nov 2021 06:38:19 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/mim-v-simmim/</guid>
      <description>&lt;p&gt;@Author： MSRA Zhenda Xie
@Source：&lt;a href=&#34;arxiv.org/abs/2111.09886&#34;&gt;Arxiv&lt;/a&gt;
， &lt;a href=&#34;https://github.com/microsoft/SimMIM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Code TBP&lt;/a&gt;
，&lt;a href=&#34;https://mp.weixin.qq.com/s/4YVYM9lPYghtZFhyOGnERw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blog_CVer&lt;/a&gt;

@Read：AikenHong 2021.11.22&lt;/p&gt;
&lt;p&gt;“What I cannot create, I do not understand.” — Richard Feynman&lt;/p&gt;
&lt;h2 id=&#34;intro--simple-conclusion&#34;&gt;Intro &amp;amp; Simple Conclusion&lt;/h2&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;继MAE和iBoT之后，MSRA也提出了一个图像掩码建模的新框架，SimMIM，该方法简化了最近这些提出的方法，不需要特殊设计，作者也验证了不需要那些特殊设计就已经能让模型展现出优秀的学习能力&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用中等大小的掩码块（32），对输入图像进行随机掩码，能使其成为强大的代理任务（pretext task）&lt;/li&gt;
&lt;li&gt;直接回归预测原始像素的RGB值的效果并不比复杂设计的Patch分类方法差&lt;/li&gt;
&lt;li&gt;Projector Head可以是轻量的Linear Layer，效果并不一定比MLP（多层）的差&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;motivation&#34;&gt;Motivation&lt;/h3&gt;
&lt;p&gt;通过这种MIM方法可以实现在大量无标注的数据上得到一个表征能力up的通用特征模型，这种方式的backbone可以广泛的应用到图像上的各种子任务中（按照NLP）的经验来说，而为了类似的方式在图像上的大放异彩，我们首先需要分析Vision和Language的不同&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;图像有更强的局部关系&lt;/strong&gt;：相互靠近的像素是高度相关和近似的，我们可以通过简单的copy padding复制一部分缺失&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;视觉信号是原始，低层次的，而文本分词是高级概念&lt;/strong&gt;：对低层次信号的预测是否对高层次的视觉识别任务有用呢？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;视觉信号是连续的，而文本的分词是离散的&lt;/strong&gt;： 如何基于分类的掩码语言建模方法来处理连续的视觉信号&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;theoretical-design&#34;&gt;Theoretical Design&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;掩码选择&lt;/strong&gt;：同样的掩码的策略还是基于Patch进行的，对于掩码的设计来说，太大的掩码快或者太密集的掩码快，可能会导致找不到附近的像素来预测，实验证明32是一个具有竞争力的size，和文本任务的信息冗余程度不同也带来了覆盖比的选择，NLP通常是0.15，而在V中，32size可以支持0.1-0.7的覆盖率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;任务选择&lt;/strong&gt;：使用原始像素的回归任务，因为回归任务和具有有序性的视觉信号的连续性很好的吻合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预测头选择&lt;/strong&gt;：使用轻量的预测头如（linear），迁移性能与繁琐的预测头相似或者略好，同时训练上更加的块。虽&lt;strong&gt;然较大的头或更高的分辨率通常会导致更强的生成能力，但这种更强的能力不一定有利于下游的微调任务&lt;/strong&gt;。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211123104311&#34;&gt;
    &lt;img alt=&#34;图片&#34; loading=&#34;lazy&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211123104311&#34;class=&#34;responsive-image&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211123104311&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;图片&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>MIM-V-iBOT</title>
      <link>https://aikenh.cn/hugotest/posts/mim-v-ibot/</link>
      <pubDate>Thu, 18 Nov 2021 06:35:52 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/mim-v-ibot/</guid>
      <description>&lt;p&gt;@Read: AikenHong 2021&lt;/p&gt;
&lt;p&gt;@Author: &lt;a href=&#34;https://arxiv.org/abs/2111.07832&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://arxiv.org/abs/2111.07832&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;@解读：&lt;a href=&#34;https://mp.weixin.qq.com/s/x4yEfg9eqW6x3Ehxm1HkRA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Machine Heart&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;基本思想&#34;&gt;基本思想&lt;/h2&gt;
&lt;p&gt;基于NLP中的MLM(Masked Language Model)的核心训练目标: 也就是遮住文本的一部分, 然后通过模型去预测和补全, 这一过程是模型学到泛化的特征, 使用这种方法来进行大规模的与训练范式.&lt;/p&gt;
&lt;p&gt;在基本的思想上和MAE采用的是一样的设计, 但是本文中坐着认为visual tokenizer的设计才是其中的关键.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不同于 NLP 中 tokenization 通过离线的词频分析即可将语料编码为含高语义的分词，图像 patch 是连续分布的且存在大量冗余的底层细节信息。而作者认为一个能够提取图像 patch 中高层语义的 tokenizer 可帮助模型避免学习到冗余的这些细节信息。作者认为视觉的 tokenizer 应该具备两个属性：（a）具备完整表征连续图像内容的能力；(b) 像 NLP 中的 tokenizer 一样具备高层语义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文中对tokenizer的设计为一个知识蒸馏的过程:&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20211118151616.png&#34;&gt;
    &lt;img alt=&#34;image-20211118151613545&#34; loading=&#34;lazy&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20211118151616.png&#34;class=&#34;responsive-image&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20211118151616.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20211118151613545&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;文中使用这种在线tokenizer同时来监督这样的MIM过程, 也就是两部分协同学习, 能够较好的保证语义的同时并将图像内容转化为连续的特征分布, 具体的, tokenizer和目标网络狗狗想网络结构, 有移动平均来得到实际的tokenizer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MIM-V-MAE</title>
      <link>https://aikenh.cn/hugotest/posts/mim-v-mae/</link>
      <pubDate>Mon, 15 Nov 2021 12:25:45 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/mim-v-mae/</guid>
      <description>&lt;p&gt;@Author：Facebook AI Research-Kaiming He
&lt;a href=&#34;https://zhuanlan.zhihu.com/p/432663453&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kaiming-MAE&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;总而言之这是一种大模型的训练方法, 通过在少量数据的基础上实现大模型的训练.&lt;/p&gt;
&lt;p&gt;整体的架构上是参考了NLP中的AutoEncoder机制，将原图切分patch，用mask掩盖原图，通过少量可见的Patch进行Encoder后和Mask融合，再通过&lt;strong&gt;非对称&lt;/strong&gt;的Decoder进行pixel的还原。&lt;/p&gt;
&lt;p&gt;这种设计的有点在于mask的scala是可变的，同时这种mask能减少我们训练过程中对显存和计算复杂度的损耗，同时问题本身是一个比较复杂的问题，得以训练复杂的大模型，这种方式最终呈现的效果就是训练的效率高且效益好。&lt;/p&gt;
&lt;p&gt;体现了自监督学习在这方面的优越性，同时这种方法得以实现也是由于ViT模型对于CNN模型的取代，才使得这种序列化切块的方式容易实现和验证。&lt;/p&gt;
&lt;p&gt;这种方式在最终体现了自监督学习对于有监督与训练的优越性，使用这种方式能够更好的得到一个模型的通用表征。&lt;/p&gt;
&lt;p&gt;在这里论文中也说明了和NLP的不同点以及这样的模型对于decoder的要求实际上是比NLP更高的&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211115113546.png&#34;&gt;
    &lt;img alt=&#34;image-20211115113542074&#34; loading=&#34;lazy&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211115113546.png&#34;class=&#34;responsive-image&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211115113546.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20211115113542074&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;
&lt;h2 id=&#34;experiment&#34;&gt;experiment&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Masking&lt;/strong&gt;：对于输入的图像进行均匀的切分并均匀的随机采样&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MAE encoder&lt;/strong&gt;: 简单的ViT模型，对输入图像进行编码后和Mask进行混合得到一个完整的令牌集合，从而确保Decode能够得到对应的位置信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MAE decoder&lt;/strong&gt;：轻量级的架构，可以独立于编码器进行设计，我们使用更窄更浅的网络，计算量比编码器10%更小，这样能够更快的进行训练。解码器的最后一层是先行投影，输出的数量==补丁中像素值的数量，最后会resize层原图的维度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OWL-survey</title>
      <link>https://aikenh.cn/hugotest/posts/owl-survey/</link>
      <pubDate>Fri, 12 Nov 2021 09:40:46 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/owl-survey/</guid>
      <description>&lt;p&gt;@AikenHong2021 OWL&lt;/p&gt;
&lt;p&gt;分析现有的OWL特点，和当前自己的研究做一个区分，也汲取一下别人的研究的要点，&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;arxiv @ &lt;a href=&#34;https://arxiv.org/pdf/2102.07848.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;self-supervised feature improve open-world learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/374268236&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;arxiv&lt;/a&gt;
 @ &lt;a href=&#34;https://arxiv.org/pdf/2102.03526.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open-world semi-supervised learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;arxiv @ &lt;a href=&#34;https://arxiv.org/pdf/2011.12906.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open-world learning without labels&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;arxiv @ &lt;a href=&#34;https://arxiv.org/pdf/1801.05609.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unseen class discovery in open-world classification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;arxiv @ &lt;a href=&#34;https://arxiv.org/pdf/2109.06628.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open-World Active Learning with Stacking Ensemble for Self-Driving Cars&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/pdf/10.1145/3308558.3313644&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www&lt;/a&gt;
 @ &lt;a href=&#34;https://blog.csdn.net/u011150266/article/details/118242627&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open-world learning and application to product classification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;cvpr @ &lt;a href=&#34;https://openaccess.thecvf.com/content/CVPR2021/papers/Mancini_Open_World_Compositional_Zero-Shot_Learning_CVPR_2021_paper.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open world composition zero-shot learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2103.02603.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cvpr&lt;/a&gt;
 @ &lt;a href=&#34;https://zhuanlan.zhihu.com/p/356272271&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Towards Open World Object Detection&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;[cvpr](&lt;a href=&#34;https://openaccess.thecvf.com/content_CVPR_2019/papers/Liu_Large-Scale_Long-Tailed_Recognition_in_an_Open_World_CVPR_2019_paper.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Large-Scale Long-Tailed Recognition in an Open World (thecvf.com)&lt;/a&gt;
) @ &lt;a href=&#34;https://github.com/zhmiao/OpenLongTailRecognition-OLTR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Large-Scale Long-Tailed Recognition in an Open World&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;h2 id=&#34;papers&#34;&gt;Papers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Mulit Open world Learning Definition&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OW Object Detector</title>
      <link>https://aikenh.cn/hugotest/posts/ow-od/</link>
      <pubDate>Tue, 28 Sep 2021 13:44:20 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/ow-od/</guid>
      <description>&lt;p&gt;@Aiken 2021&lt;/p&gt;
&lt;p&gt;框架撞车系列，主要看看这一篇论文中怎么解决如下的问题👇，并从中借鉴和优化的我框架设计&lt;/p&gt;
&lt;h2 id=&#34;思路分析&#34;&gt;思路分析&lt;/h2&gt;
&lt;h3 id=&#34;motivation&#34;&gt;Motivation&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;模型实现的主要的两个TASK：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Set Learning ： 在没有明确监督的时候，将尚未引入的目标类别识别为未知&lt;/li&gt;
&lt;li&gt;Incremental Learning：类别增量学习&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;实现这两个问题的主要思路：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自动标注&lt;/strong&gt;：借鉴RPN的class-agnostic，以及检测和分类的显著性指标的差异，找到并自动标注NewClass&lt;/li&gt;
&lt;li&gt;**对比聚类：**使用prototype feature来进行聚类，同时计算Distance损失
it seems like contain a unknown prototype.&lt;/li&gt;
&lt;li&gt;**energy based：**亥姆霍兹自由能公式？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210412171723896.png&#34;&gt;
    &lt;img alt=&#34;image-20210412171723896&#34; loading=&#34;lazy&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210412171723896.png&#34;class=&#34;responsive-image&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210412171723896.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20210412171723896&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;
&lt;h3 id=&#34;energy-based&#34;&gt;&lt;strong&gt;ENERGY BASED&lt;/strong&gt;&lt;/h3&gt;
&lt;!-- more --&gt;
&lt;p&gt;Feature： $F$ , Label: $L$ ,  Energy: $E(F,l)$&lt;/p&gt;
&lt;p&gt;能量函数倾向于将已知的类别分类到低熵的分布上，然后我们可以根据特征在能量空间上的划分来区分新类和旧类。然后我们可以根据logits表达的softmax形式，找到输出和Gibbs distribution的相关性：&lt;/p&gt;
&lt;div&gt;
$$ 
p(l \mid \boldsymbol{f})=\frac{\exp \left(\frac{g_{l}(\boldsymbol{f})}{T}\right)}{\sum_{i=1}^{\mathrm{C}} \exp \left(\frac{g_{i}(\boldsymbol{f})}{T}\right)}=\frac{\exp \left(-\frac{E(\boldsymbol{f}, l)}{T}\right)}{\exp \left(-\frac{E(\boldsymbol{f})}{T}\right)}
 $$
&lt;/div&gt;
&lt;p&gt;通过这个相关性，我们对自由能进行一个定义，以logits的形式表达&lt;/p&gt;</description>
    </item>
    <item>
      <title>EfficientNet</title>
      <link>https://aikenh.cn/hugotest/posts/efficientnet/</link>
      <pubDate>Tue, 28 Sep 2021 05:34:22 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/efficientnet/</guid>
      <description>&lt;p&gt;Tags: Paper
URL1: &lt;a href=&#34;https://arxiv.org/pdf/1905.11946.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://arxiv.org/pdf/1905.11946.pdf&lt;/a&gt;

URL2: &lt;a href=&#34;https://arxiv.org/pdf/2104.00298.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://arxiv.org/pdf/2104.00298.pdf&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;提出了一种模型缩放策略，如何更高效的平衡网络的深度、宽度、和图片分辨率
&lt;strong&gt;1. Efficient Net: Rethinking Model Scaling for Convolutional Neural Networks
2. EfficientNetV2: Smaller Models and Faster Training&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;@Aiken H 2021 find detail to code his&lt;/p&gt;
&lt;h1 id=&#34;efficient-net-v1&#34;&gt;Efficient Net V1&lt;/h1&gt;
&lt;p&gt;除了提出了缩放策略以外，还使用神经架构搜索还建立了一个新的baseline network，得到了一系列模型。&lt;/p&gt;
&lt;p&gt;平衡网络宽度、深度、分辨率至关重要，这种平衡可以通过简单的恒定比率缩放维度来实现，于是我们&lt;strong&gt;提出了一种简单有效的复合缩放&lt;/strong&gt;方法。&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&#34;&gt;
    &lt;img alt=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&#34; loading=&#34;lazy&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&#34;class=&#34;responsive-image&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;复合缩放的物理意义：输入图像更大的话就需要更多层来增加感受野和更多通道，从而能在更大的图像上捕获更多细粒度的图案，而宽度和深度（对于表达能力来说很重要）之间也存在着一定的关系，“我们”是第一个对此进行了建模的。&lt;/p&gt;
&lt;p&gt;从各个维度单独的进行缩放能发现都存在着增益瓶颈，如何去得到这么一个合适的等比缩放增益&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;motivation-and-method&#34;&gt;Motivation and Method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;一些直观上的motivation，以及假想&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OW-openmix</title>
      <link>https://aikenh.cn/hugotest/posts/ow-openmix/</link>
      <pubDate>Wed, 23 Jun 2021 13:45:50 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/ow-openmix/</guid>
      <description>&lt;p&gt;@Aiken 2021 究极万恶的撞车论文&lt;/p&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt; ：Tackle the problem of 发现无标注数据中与给定（已知）类别不相交的新类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related Research：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现有的方法通常1. 使用标记数据对模型进行预训练； 2. 无监督聚类在未标记的数据中识别新的类&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者认为label带来的essential knowledge在第二步中没有被充分学习利用到，这样模型就只能从第一步的现成知识中获益，而不能利用标记数据和未标记数据之间的潜在关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- more --&gt;
&lt;p&gt;&lt;strong&gt;Hypothesis：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有标记的类别和无标记的类别之间没有Overlap，这样导致在两个类别之间很难建立学习关系，（为啥我感觉这个说的都是屁话）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Openmix：将标注的数据和未标注的数据同时混合起来得到一个联合标签的分布中，用两种方式来动态合成示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们混合标记和未标记数据作为Training Img，混合了已知类别的先验生成的伪标签会比无监督情况下生成的伪标签跟家的可靠？防止在错误的伪标签前提下发生过拟合&lt;/li&gt;
&lt;li&gt;在第一步的时候我们鼓励具有高类别置信度的无标记example作为可考虑的类别，然后我们将这些samples作为anchor，并将它们进一步的和无标注的samples整合，这使得我们能够对无标注数据产生更多的组合，并发现更精细的新类关系。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;detail&#34;&gt;Detail&lt;/h2&gt;
&lt;p&gt;果然在混合的方式上和MixUp的策略进行比对了，就是diss了Mixup使用伪标签的情景可能会进一步的引入不确定性，导致算法的效果反向优化，就是再label和unlabeled数据上混用mixup，而不是单纯的对unlabel数据集进行混合。&lt;/p&gt;
&lt;p&gt;首先将没有overlap的标签表现为联合标签分布再进行混合，也就是加长onehot，这样的标签的优越性在？对于unlabelled data引入了确定性，防止标签容易过拟合。也就是给伪标签加入了一个锚定，让他能够变化的更平滑&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210414225637547.png&#34;&gt;
    &lt;img alt=&#34;image-20210414225637547&#34; loading=&#34;lazy&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210414225637547.png&#34;class=&#34;responsive-image&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210414225637547.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20210414225637547&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;这尼玛这张图看了不久完事了，bibi一大堆啥的呢。主要分析一下三个损失函数代表的是什么意思。&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210414231455696.png&#34;&gt;
    &lt;img alt=&#34;image-20210414231455696&#34; loading=&#34;lazy&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210414231455696.png&#34;class=&#34;responsive-image&#34; src=&#34;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210414231455696.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20210414231455696&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>YOLOv4 阅读笔记</title>
      <link>https://aikenh.cn/hugotest/posts/cv-yolov4/</link>
      <pubDate>Sun, 26 Jul 2020 13:16:40 +0000</pubDate>
      <guid>https://aikenh.cn/hugotest/posts/cv-yolov4/</guid>
      <description>&lt;p&gt;@AikenHong 20200726&lt;/p&gt;
&lt;p&gt;基于YOLO v4 掌握一些CV方面训练的&lt;strong&gt;Trick&lt;/strong&gt;，同时针对Typora的使用进行一个熟悉掌握。&lt;a href=&#34;https://github.com/AlexeyAB/darknet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GITHUB CODE&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;一些相关的参考资料&lt;/p&gt;
&lt;p&gt;⚡️https://zhuanlan.zhihu.com/p/150127712&lt;/p&gt;
&lt;p&gt;⚡ &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650785604&amp;amp;idx=1&amp;amp;sn=46bd186e5291deded9f6ec1ae6a22649&amp;amp;chksm=871a033ab06d8a2cff370a06e9e88f578a6c16a70231778ae2f997a8b30e347c6e746db10759&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0429kHitmMCPeF2JGN1XCzik&amp;amp;sharer_sharetime=1588144165276&amp;amp;sharer_shareid=484a4a951d2ad320314b6b56ee9a0ba8&amp;amp;key=c53866ae67b2b8c4b46c89671357025dcdb6b895d1ebde603135230e484682a3552d924bf6126ecf72cb98361e1171f0f0381bee5bd456520dd201034c33ec48272d62ae73345cc914c2db9c6e943a10&amp;amp;ascene=1&amp;amp;uin=NTkyNDg4NjQw&amp;amp;devicetype=Windows&amp;#43;10&amp;#43;x64&amp;amp;version=62090070&amp;amp;lang=zh_CN&amp;amp;exportkey=ASfZUAGjes1A%2BJpXS1yNmT0%3D&amp;amp;pass_ticket=GB56ClnZIrs5ENfLSAh4yF9tj54n041FM39bTg38LQuW%2FKDyBPyfqKLD8SDIZgE%2F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;机器之心YOLOv4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;⚡️https://www.zhihu.com/question/390191723/answer/1177584901&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文中一些其他的收获&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;•  其他可替代的Object Detection的SOTA算法有哪些&lt;/p&gt;
&lt;p&gt;•  BoS，BoF方法&lt;/p&gt;
&lt;p&gt;•  简直是一个Tricks的综述&lt;/p&gt;
&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;本文对近期再CNN上的一些Feature方法进行了尝试组合，并实现了新的SOTA，其实就是一些&lt;strong&gt;通用的&lt;strong&gt;&lt;strong&gt;Trick&lt;/strong&gt;&lt;/strong&gt;的组合&lt;/strong&gt;尝试，包括&lt;/p&gt;
&lt;p&gt;•  加权残差连接（WRC）&lt;/p&gt;
&lt;p&gt;•  Cross-Stage-Partial-connection，CSP&lt;/p&gt;
&lt;p&gt;•  Cross mini-Batch Normalization，CmBN&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;•  自对抗训练（Self-adversarial-training，SAT）&lt;/p&gt;
&lt;p&gt;•  Mish 激活（Mish-activation）&lt;/p&gt;
&lt;p&gt;•  Mosaic 数据增强&lt;/p&gt;
&lt;p&gt;•  DropBlock 正则化&lt;/p&gt;
&lt;p&gt;•  CIoU 损失&lt;/p&gt;
&lt;p&gt;基于该文章我们可以了解一下这些方法的主要思路和后续的应用价值。YOLOv4 更快，更准确，只需要比较小的计算需求即可&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
  &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210930165042.png&#34;&gt;
    &lt;img alt=&#34;image-20210930165040810&#34; loading=&#34;lazy&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210930165042.png&#34;class=&#34;responsive-image&#34; src=&#34;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210930165042.png&#34; style=&#34;display: block; margin: 0 auto;&#34;
      alt=&#34;image-20210930165040810&#34;  /&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;script&gt;
  document.addEventListener(&#34;DOMContentLoaded&#34;, function() {
      var images = document.querySelectorAll(&#34;.responsive-image&#34;);
      var maxHeight = window.innerHeight / 2.5;
      images.forEach(function(image) {
          image.style.maxHeight = maxHeight + &#34;px&#34;;
      });
  });
&lt;/script&gt;
&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
