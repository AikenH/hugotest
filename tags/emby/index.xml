<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Emby on aiken&#39;s blog</title>
    <link>https://hugotest-phi.vercel.app/tags/emby/</link>
    <description>Recent content in Emby on aiken&#39;s blog</description>
    <generator>Hugo -- 0.137.0</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Nov 2023 14:05:15 +0000</lastBuildDate>
    <atom:link href="https://hugotest-phi.vercel.app/tags/emby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>破解本地自托管Emby服务</title>
      <link>https://hugotest-phi.vercel.app/posts/emby_localhost_crack_by_nginx/</link>
      <pubDate>Fri, 10 Nov 2023 14:05:15 +0000</pubDate>
      <guid>https://hugotest-phi.vercel.app/posts/emby_localhost_crack_by_nginx/</guid>
      <description>&lt;h2 id=&#34;intro-问题描述&#34;&gt;Intro 问题描述&lt;/h2&gt;
&lt;p&gt;以 emby 为例，学习如何对这种自托管的服务，请求验证网站的软件进行破解，破解的整体思路分为以下的两类：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一种是改客户端，一种是改服务端。两种方式的最终原理一样，都是搭建仿冒认证服务器，客户端访问伪服务器拿到授权信息；【3】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此无论是那种方法我们都需要搭建伪验证服务器：所以以下的操作是必须的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;抓取定位到验证服务器的地址，并获取验证服务器返回的验证信息格式；&lt;/li&gt;
&lt;li&gt;使用 Nginx 搭建虚拟的验证服务器，使其返回激活/验证信息；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果是&lt;strong&gt;修改客户端&lt;/strong&gt;，则在搭建完验证站后需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改 Host 文件，将请求验证服务器的请求劫持到本地搭建的服务上；&lt;/li&gt;
&lt;li&gt;需要伪服务器和客户端都要安装自签名证书&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是&lt;strong&gt;修改服务端&lt;/strong&gt;，则后续需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改服务端源文件，将默认的认证服务器 mb3admin.com 地址直接改成伪服务器&lt;/li&gt;
&lt;li&gt;这样就&lt;strong&gt;不需要安装自签名证书&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是使用 Docker 进行部署的 emby 可以使用别人修改好的服务端的镜像进行部署安装（like 开心版）&lt;/p&gt;
&lt;p&gt;本文主要介绍验证服务器的搭建、修改客户端的方法，以及一些其他的注意事项；&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
